(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{727:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("a",{attrs:{href:"https://www.runoob.com/regexp/regexp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式"),s("OutboundLink")],1),t._v("（Regular Expression，简称 Regex 或 RegExp）是一种用来匹配字符串中字符组合的模式。")]),t._v(" "),s("p",[t._v("正则表达式是一种用于模式匹配和搜索文本的工具。")]),t._v(" "),s("p",[t._v("正则表达式提供了一种灵活且强大的方式来查找、替换、验证和提取文本数据。")]),t._v(" "),s("p",[t._v("正则表达式可以应用于各种编程语言和文本处理工具中，如 JavaScript、Python、Java、Perl 等。")]),t._v(" "),s("h2",{attrs:{id:"metacharacters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metacharacters"}},[t._v("#")]),t._v(" Metacharacters")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.runoob.com/regexp/regexp-metachar.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("元字符"),s("OutboundLink")],1),t._v("（Metacharacters）：在正则表达式中有特殊含义的字符。下面是一些常见的正则表达式元字符：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}}),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("符合")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("示例")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("基本元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("**点号"),s("code",[t._v(".")]),t._v("**‌")]),t._v(" "),s("td",[t._v("匹配除换行符之外的任何单个字符。")]),t._v(" "),s("td",[s("code",[t._v("a.c")]),t._v(' 匹配"abc"、"a#c"、"a1c"等')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("基本元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("**反斜杠"),s("code",[t._v("\\")]),t._v("**‌")]),t._v(" "),s("td",[t._v("转义字符，用于转义元字符， 使后面的字符失去特殊含义，使其表示其本身。")]),t._v(" "),s("td",[s("code",[t._v("\\.")]),t._v('  匹配实际的点号字符"."')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("基本元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("**脱字符"),s("code",[t._v("^")]),t._v("**‌")]),t._v(" "),s("td",[t._v("定位符。当在方括号表达式外时，表示行的开始；"),s("br"),t._v("否定字符类。在方括号表达式内，表示否定或排除。")]),t._v(" "),s("td",[s("code",[t._v("^abc")]),t._v('  匹配以"abc"开始的字符串'),s("br"),s("code",[t._v("[^a]")]),t._v(' 匹配非"a"的任意字符')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("基本元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("**美元符号"),s("code",[t._v("$")]),t._v("**‌")]),t._v(" "),s("td",[t._v("定位符。表示行的结束。")]),t._v(" "),s("td",[s("code",[t._v("abc$")]),t._v('  匹配以"abc"结束的字符串')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("方括号"),s("code",[t._v("[]")])])]),t._v(" "),s("td",[t._v("定义字符集合，匹配其中任意一个字符")]),t._v(" "),s("td",[s("code",[t._v("[aeiou]")]),t._v(" 匹配任意一个元音字母")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("否定字符类"),s("code",[t._v("[^]")])])]),t._v(" "),s("td",[t._v("匹配不在方括号中的任意字符")]),t._v(" "),s("td",[s("code",[t._v("[^0-9]")]),t._v(" 匹配任意非数字字符")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("连字符"),s("code",[t._v("-")])])]),t._v(" "),s("td",[t._v("在字符类中表示范围")]),t._v(" "),s("td",[s("code",[t._v("[a-z]")]),t._v(" 匹配任意小写字母")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("量词元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("问号"),s("code",[t._v("?")])])]),t._v(" "),s("td",[t._v("限定符。匹配前面的子表达式零次或一次。默认情况下，量词("),s("code",[t._v("*")]),t._v(", "),s("code",[t._v("+")]),t._v(", "),s("code",[t._v("?")]),t._v(", "),s("code",[t._v("{}")]),t._v(")是贪婪的，会尽可能多地匹配字符。在量词后加"),s("code",[t._v("?")]),t._v("可使其变为非贪婪(懒惰)模式。")]),t._v(" "),s("td",[s("code",[t._v("ab?c")]),t._v(' 匹配"ac"和"abc"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("量词元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("星号"),s("code",[t._v("*")])])]),t._v(" "),s("td",[t._v("限定符。匹配前面的子表达式零次或多次。")]),t._v(" "),s("td",[s("code",[t._v('ab*c"')]),t._v(' 匹配"ac"、"abc"、"abbc"、"abbbc"等')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("量词元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("‌**加号"),s("code",[t._v("+")]),t._v("**‌")]),t._v(" "),s("td",[t._v("限定符。匹配前面的子表达式一次或多次。")]),t._v(" "),s("td",[s("code",[t._v("ab+c")]),t._v(' 匹配"abc"、"abbc"、"abbbc"等，但不匹配"ac"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("量词元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("花括号"),s("code",[t._v("{n}")])])]),t._v(" "),s("td",[t._v("限定符。精确匹配n次。")]),t._v(" "),s("td",[s("code",[t._v("a{3}")]),t._v(' 匹配 "aaa"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("量词元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("{n,}")])]),t._v(" "),s("td",[t._v("限定符。至少匹配n次。")]),t._v(" "),s("td",[s("code",[t._v("a{2,}")]),t._v(' 匹配 "aa", "aaa" 等')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("量词元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("{n,m}")])]),t._v(" "),s("td",[t._v("限定符。匹配n到m次。")]),t._v(" "),s("td",[s("code",[t._v("a{2,4}")]),t._v(' 匹配 "aa", "aaa", "aaaa"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("贪婪与非贪婪量词")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("*"),s("strong",[t._v("?")])]),t._v(" "),s("td",[t._v("限定符。零次或多次，但尽可能少。"),s("br"),t._v("默认情况下，量词("),s("code",[t._v("*")]),t._v(", "),s("code",[t._v("+")]),t._v(", "),s("code",[t._v("?")]),t._v(", "),s("code",[t._v("{}")]),t._v(")是贪婪的，会尽可能多地匹配字符。在量词后加"),s("code",[t._v("?")]),t._v("可使其变为非贪婪(懒惰)模式。")]),t._v(" "),s("td",[s("code",[t._v("<.*?>")]),t._v(" 匹配HTML标签时不会跨标签匹配")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("贪婪与非贪婪量词")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("+?")])]),t._v(" "),s("td",[t._v("限定符。一次或多次，但尽可能少")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("贪婪与非贪婪量词")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("??")])]),t._v(" "),s("td",[t._v("限定符。零次或一次，但尽可能少")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("贪婪与非贪婪量词")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("{n,m}?")])]),t._v(" "),s("td",[t._v("限定符。n到m次，但尽可能少")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("(pattern)")])]),t._v(" "),s("td",[t._v("定义子表达式或捕获组。"),s("br"),t._v("捕获分组元字符，非命名捕获。捕获匹配的子字符串。编号为零的第一个捕获是由整个正则表达式模式匹配的文本，其它捕获结果则根据左括号的顺序从1开始自动编号。")]),t._v(" "),s("td",[s("code",[t._v("(ab)+")]),t._v(' 匹配 "ab", "abab" 等')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("code",[t._v("(?<name>pattern)")])])]),t._v(" "),s("td",[t._v("捕获分组元字符，命名捕获。将匹配的子字符串捕获到一个组名称或编号名称中。用于name的字符串不能包含任何标点符号，并且不能以数字开头。可以使用单引号"),s("br"),t._v("替代尖括号，例如（?'name'）")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("非捕获分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("code",[t._v("(?:pattern)")])])]),t._v(" "),s("td",[t._v("一个非捕获分组(Non-capturing group)，它用于对正则表达式进行分组，但不会创建反向引用。这种分组方式比普通的捕获分组。它的特点和用法："),s("br"),t._v("1. 提高性能 - 不需要存储匹配的内容"),s("br"),t._v("2. 代码更清晰 - 明确表示这个组不需要被引用"),s("br"),t._v("3. 减少内存使用 - 不会创建额外的捕获组")]),t._v(" "),s("td",[s("code",[t._v("(?:jpg|jpeg|png)")]),t._v(" 匹配 jpg 或 jpeg 或 png 文件扩展名")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("非捕获分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("code",[t._v("(?=pattern)")])])]),t._v(" "),s("td",[t._v("正向肯定预查。匹配后面跟着特定模式的位置。一种前瞻性断言(Positive Lookahead)的非捕获分组，它用于匹配某个位置，这个位置的后面必须匹配指定的pattern，但不会消耗这些字符。它的特点和用法："),s("br"),t._v("1. 匹配一个位置，这个位置后面的字符要满足pattern"),s("br"),t._v("2. 不会将pattern部分包含在最终的匹配结果中"),s("br"),t._v("3. 不会消耗字符，只是检查是否满足条件")]),t._v(" "),s("td",[s("code",[t._v("Windows（?=95|98|NT|2000)")]),t._v(' 匹配"Windows2000"中的“Windows"，但不匹配“Windows3.1"中的"Windows"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("非捕获分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[s("code",[t._v("(?!pattern)")])])]),t._v(" "),s("td",[t._v("正向否定预查。匹配后面不跟着特定模式的位置。一种负向前瞻断言(Negative Lookahead)，它用于匹配某个位置，这个位置的后面不能匹配指定的pattern。这是一个非捕获分组，不会消耗任何字符。它的特点和用法："),s("br"),t._v("1. 匹配一个位置，这个位置后面的字符不能满足pattern"),s("br"),t._v("2. 不会消耗字符，只是检查条件"),s("br"),t._v("3. 不会捕获匹配内容")]),t._v(" "),s("td",[s("code",[t._v("Windows（?!95|98|NT|2000)")]),t._v(' 匹配"Windows3.1"中的“Windows"，但不匹配“Windows2000"中的"Windows"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("非捕获分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("(?<=pattern)")])]),t._v(" "),s("td",[t._v("反向肯定预查。匹配前面是特定模式的位置。")]),t._v(" "),s("td",[s("code",[t._v("(?<=95|98)Windows")]),t._v(' 匹配前面是95或98的"Windows"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("非捕获分组元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("(?<!pattern)")])]),t._v(" "),s("td",[t._v("反向否定预查。匹配前面不是特定模式的位置。")]),t._v(" "),s("td",[s("code",[t._v("(?<!95|98)Windows")]),t._v(' 匹配前面不是95或98的"Windows"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("反向引用")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("反斜杠加数字（例如，"),s("code",[t._v("\\1")]),t._v("）")])]),t._v(" "),s("td",[t._v("用于引用捕获组的语法。"),s("br"),t._v("反向引用(Backreference)允许我们在正则表达式中（模式内）引用之前捕获组匹配到的内容。"),s("br"),t._v("它使用 "),s("code",[t._v("\\1")]),t._v(" "),s("code",[t._v("\\2")]),t._v("  等来引用前面的捕获组。例如："),s("code",[t._v("\\1")]),t._v(" 引用第一个捕获组，"),s("code",[t._v("\\2")]),t._v(" 引用第二个捕获组，以此类推。"),s("br"),t._v("反向引用是正则表达式中一个强大的功能，它允许我们匹配重复的内容或验证对称的模式。在处理HTML/XML标签、查找重复内容、验证输入等场景中特别有用。使用时需要注意捕获组的编号和作用范围，以及非捕获组不能被引用的限制。"),s("br"),s("code",[t._v("\\1")]),t._v(" 的用法："),s("br"),t._v("1. 用在正则表达式模式内部"),s("br"),t._v("2. 用于匹配与第一个捕获组相同的内容"),s("br"),s("code",[t._v("$1")]),t._v(" 的用法："),s("br"),t._v("1. 用在替换字符串中"),s("br"),t._v("2. 用于引用正则表达式中捕获的组")]),t._v(" "),s("td",[s("code",[t._v("(ab)c\\\\1")]),t._v(' 匹配"abcab"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("选择元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("**竖线"),s("code",[t._v("|")]),t._v("**‌")]),t._v(" "),s("td",[t._v('表示"或"关系，用于分隔两个或多个可能的匹配模式。')]),t._v(" "),s("td",[s("code",[t._v("cat|dog")]),t._v(' 匹配 "cat" 或 "dog"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\d")])]),t._v(" "),s("td",[t._v("匹配任意数字，等价于 "),s("code",[t._v("[0-9]")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\D")])]),t._v(" "),s("td",[t._v("匹配任意非数字，等价于 "),s("code",[t._v("[^0-9]")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\w")])]),t._v(" "),s("td",[t._v("匹配任意单词字符(字母、数字、下划线)，等价于 "),s("code",[t._v("[a-zA-Z0-9_]")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\W")])]),t._v(" "),s("td",[t._v("匹配任意非单词字符，等价于 "),s("code",[t._v("[^a-zA-Z0-9_]")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\s")])]),t._v(" "),s("td",[t._v("匹配任意空白字符(空格、制表符、换行符等)")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("特殊字符类元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\S")])]),t._v(" "),s("td",[t._v("匹配任意非空白字符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("边界匹配元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\b")])]),t._v(" "),s("td",[t._v("定位符。匹配单词边界")]),t._v(" "),s("td",[s("code",[t._v("\\bcat\\b")]),t._v(' 匹配 "cat" 但不匹配 "category"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("边界匹配元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\B")])]),t._v(" "),s("td",[t._v("定位符。匹配非单词边界")]),t._v(" "),s("td",[s("code",[t._v("\\Bcat\\B")]),t._v(' 匹配 "scattered" 中的 "cat" 但不匹配单独的 "cat"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("其他元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\n")])]),t._v(" "),s("td",[t._v("匹配换行符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("其他元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\t")])]),t._v(" "),s("td",[t._v("匹配制表符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("其他元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\r")])]),t._v(" "),s("td",[t._v("匹配回车符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("其他元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\f")])]),t._v(" "),s("td",[t._v("匹配换页符")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("其他元字符")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("\\v")])]),t._v(" "),s("td",[t._v("匹配垂直制表符")]),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"pattern-and-matcher-in-java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pattern-and-matcher-in-java"}},[t._v("#")]),t._v(" Pattern and Matcher in Java")]),t._v(" "),s("p",[t._v("Java正则表达式主要涉及 "),s("code",[t._v("Pattern")]),t._v("和 "),s("code",[t._v("Matcher")]),t._v(" 两个核心类，它们都在 "),s("code",[t._v("java.util.regex")]),t._v(" 包中。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PatternDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demonstratePattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 编译正则表达式")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\w+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 编译时设置标志")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" patternWithFlags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\w+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CASE_INSENSITIVE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MULTILINE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 创建Matcher对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" matcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test string"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 分割字符串")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" parts "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello,world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 快速匹配")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isMatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6. 获取正则表达式")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7. 获取编译标志")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br")])]),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MatcherDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demonstrateMatcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\w+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" matcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 查找匹配")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" found "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找下一个匹配")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" matches "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 整个字符串是否匹配")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" lookingAt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookingAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从开始处查找匹配")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 获取匹配信息")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配的起始位置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配的结束位置")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配的内容")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 替换操作")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" replaced "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replacement"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" replacedFirst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"replacement"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 重置操作")]),t._v("\n        matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置匹配器")]),t._v("\n        matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置并更改文本")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br")])]),s("p",[s("code",[t._v("Pattern")]),t._v(" 类核心方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("compile(String regex)")]),t._v(": 编译正则表达式")]),t._v(" "),s("li",[s("code",[t._v("compile(String regex, int flags)")]),t._v(": 带标志的编译")]),t._v(" "),s("li",[s("code",[t._v("matcher(CharSequence input)")]),t._v(": 创建"),s("code",[t._v("Matcher")]),t._v("对象")]),t._v(" "),s("li",[s("code",[t._v("split(CharSequence input)")]),t._v(": 分割字符串")]),t._v(" "),s("li",[s("code",[t._v("matches(String regex, CharSequence input)")]),t._v(": 静态匹配方法")]),t._v(" "),s("li",[s("code",[t._v("pattern()")]),t._v(": 返回正则表达式字符串")]),t._v(" "),s("li",[s("code",[t._v("flags()")]),t._v(": 返回编译标志")])]),t._v(" "),s("p",[s("code",[t._v("Matcher")]),t._v(" 类核心方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("find()")]),t._v(": 查找下一个匹配")]),t._v(" "),s("li",[s("code",[t._v("matches()")]),t._v(": 整个字符串匹配")]),t._v(" "),s("li",[s("code",[t._v("lookingAt()")]),t._v(": 从开始处匹配")]),t._v(" "),s("li",[s("code",[t._v("group()")]),t._v(": 返回匹配的字符串")]),t._v(" "),s("li",[s("code",[t._v("group(int group)")]),t._v(": 返回指定分组")]),t._v(" "),s("li",[s("code",[t._v("start()")]),t._v(": 返回匹配的起始位置")]),t._v(" "),s("li",[s("code",[t._v("end()")]),t._v(": 返回匹配的结束位置")]),t._v(" "),s("li",[s("code",[t._v("replaceAll(String replacement)")]),t._v(": 替换所有匹配")]),t._v(" "),s("li",[s("code",[t._v("replaceFirst(String replacement)")]),t._v(": 替换第一个匹配")]),t._v(" "),s("li",[s("code",[t._v("reset()")]),t._v(": 重置匹配器")]),t._v(" "),s("li",[s("code",[t._v("appendReplacement()")]),t._v(": 追加替换内容")]),t._v(" "),s("li",[s("code",[t._v("appendTail()")]),t._v(": 追加剩余内容")])]),t._v(" "),s("p",[t._v("在Java中，正则表达式中实现不区分大小写匹配的示例：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 (?i) 标记")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" regex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(?i)hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者使用 Pattern.CASE_INSENSITIVE 标志")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CASE_INSENSITIVE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("部分模式不区分大小写：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (?i)abc 表示abc都不区分大小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a(?i)bc 表示bc不区分大小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a((?i)b)c 表示只有b不区分大小写")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserName: John_Doe, EMAIL: John@example.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有 email 部分不区分大小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Username: \\\\w+, (?i)email: [\\\\w@.]+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以用 (?-i) 关闭不区分大小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(?i)Username: \\\\w+, email: (?-i)[a-z@.]+"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("注意事项：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("(?i)")]),t._v(" 可以放在整个正则表达式的开始处，也可以放在需要忽略大小写的部分前面")])]),t._v(" "),s("li",[s("p",[t._v("可以使用 "),s("code",[t._v("(?-i)")]),t._v(" 来关闭不区分大小写的效果")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);